plugins {
    id 'java'
    id "com.gradle.build-scan" version "2.1"
}

group 'org.gradle'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

buildScan {
    server = 'https://e.grdev.net'
    publishAlways()
    captureTaskInputFiles = true

    background {
        def gitCommitId = execAndGetStdout("git", "rev-parse", "--verify", "HEAD")
        def branchName = execAndGetStdout("git", "rev-parse", "--abbrev-ref", "HEAD")
        if (branchName != null && !branchName.isEmpty() && branchName != "HEAD") {
            tag branchName
        }
        value "Git Commit ID", gitCommitId
        link "Git commit scans", customValueSearchUrl(['Git Commit ID': gitCommitId])
    }
}

dependencies {
    implementation project(':cache-examples-lib')

    testImplementation 'junit:junit:4.12'
}

def customValueSearchUrl(Map<String, String> search) {
    def query = search.collect { name, value ->
        "search.names=${URLEncoder.encode(name, "UTF-8")}&search.values=${URLEncoder.encode(value, "UTF-8")}"
    }.join("&")
    return "https://e.grdev.net/scans?$query"
}

def execAndGetStdout(String... args) {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine(args)
        standardOutput = stdout
    }
    return stdout.toString().trim()
}